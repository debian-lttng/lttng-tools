#!/bin/bash
#
# Copyright (C) - 2012 David Goulet <dgoulet@efficios.com>
#
# This library is free software; you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; version 2.1 of the License.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA
TEST_DESC="Streaming - User space tracing"

CURDIR=$(dirname $0)/
TESTDIR=$CURDIR/../../..
NR_ITER=5
NR_USEC_WAIT=1000000
TESTAPP_PATH="$TESTDIR/utils/testapp"
TESTAPP_NAME="gen-ust-events"
TESTAPP_BIN="$TESTAPP_PATH/$TESTAPP_NAME/$TESTAPP_NAME"
SESSION_NAME="stream"
EVENT_NAME="tp:tptest"
PID_RELAYD=0

TRACE_PATH=$(mktemp -d)

NUM_TESTS=16

source $TESTDIR/utils/utils.sh

if [ ! -x "$TESTAPP_BIN" ]; then
	BAIL_OUT "No UST events binary detected."
fi

function lttng_create_session_uri
{
	# Create session with default path
	$TESTDIR/../src/bin/lttng/$LTTNG_BIN create $SESSION_NAME -U net://localhost >/dev/null 2>&1
	ok $? "Create session with default path"
}


# MUST set TESTDIR before calling those functions

function test_ust_before_start ()
{
	diag "Test UST streaming BEFORE tracing starts"
	lttng_create_session_uri
	enable_ust_lttng_event $SESSION_NAME $EVENT_NAME

	# Run 5 times with a 1 second delay
	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT >/dev/null 2>&1 &

	start_lttng_tracing $SESSION_NAME
	# Wait for the applications started in background
	wait ${!}

	stop_lttng_tracing $SESSION_NAME
	destroy_lttng_session $SESSION_NAME
}

function test_ust_after_start ()
{
	diag "Test UST streaming AFTER tracing starts"
	lttng_create_session_uri
	enable_ust_lttng_event $SESSION_NAME $EVENT_NAME
	start_lttng_tracing $SESSION_NAME

	# Run 5 times with a 1 second delay
	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT >/dev/null 2>&1

	stop_lttng_tracing $SESSION_NAME
	destroy_lttng_session $SESSION_NAME
}

plan_tests $NUM_TESTS

print_test_banner "$TEST_DESC"

start_lttng_relayd "-o $TRACE_PATH"
start_lttng_sessiond

tests=( test_ust_before_start test_ust_after_start )

for fct_test in ${tests[@]};
do
	SESSION_NAME=$(randstring 16 0)
	${fct_test}

	# Validate test
	validate_trace $EVENT_NAME $TRACE_PATH/$HOSTNAME/$SESSION_NAME*
	if [ $? -eq 0 ]; then
		# Only delete if successful
		rm -rf $TRACE_PATH
	else
		break
	fi
done

stop_lttng_sessiond
stop_lttng_relayd

exit $out
