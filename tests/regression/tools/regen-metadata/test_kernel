#!/bin/bash
#
# Copyright (C) 2015 Julien Desfossez <jdesfossez@efficios.com>
#
# SPDX-License-Identifier: LGPL-2.1-only

TEST_DESC="Streaming - Kernel tracing"

CURDIR=$(dirname $0)/
TESTDIR=$CURDIR/../../..
EVENT_NAME="lttng_test_filter_event"
SESSION_NAME=""

TRACE_PATH=$(mktemp -d)

NUM_TESTS=24

source $TESTDIR/utils/utils.sh

function test_kernel_streaming ()
{
	local metadata_path

	diag "Test kernel streaming with metadata regeneration"
	create_lttng_session_uri $SESSION_NAME net://localhost
	lttng_enable_kernel_event $SESSION_NAME $EVENT_NAME
	start_lttng_tracing_ok $SESSION_NAME
	echo -n "100" > /proc/lttng-test-filter-event

	# Baseline
	stop_lttng_tracing_ok $SESSION_NAME
	validate_trace $EVENT_NAME $TRACE_PATH/$HOSTNAME/$SESSION_NAME*

	# Find the metadata file
	metadata_path=$(find "$TRACE_PATH/$HOSTNAME/$SESSION_NAME"* | grep metadata)

	# Empty the metadata file
	echo -n > "$metadata_path"

	start_lttng_tracing_ok $SESSION_NAME
	regenerate_metadata_ok $SESSION_NAME
	stop_lttng_tracing_ok $SESSION_NAME
	# Validate test
	validate_trace $EVENT_NAME $TRACE_PATH/$HOSTNAME/$SESSION_NAME*
	destroy_lttng_session_ok $SESSION_NAME
	rm -rf "$TRACE_PATH"
}

function test_kernel_local ()
{
	local metadata_path

	diag "Test kernel local with metadata regeneration"
	create_lttng_session_ok $SESSION_NAME $TRACE_PATH
	lttng_enable_kernel_event $SESSION_NAME $EVENT_NAME
	start_lttng_tracing_ok $SESSION_NAME

	# Baseline
	echo -n "100" > /proc/lttng-test-filter-event
	stop_lttng_tracing_ok $SESSION_NAME
	validate_trace $EVENT_NAME "$TRACE_PATH"

	# Find the metadata file
	metadata_path=$(find "$TRACE_PATH"* | grep metadata)

	# Empty the metadata file
	echo -n > "$metadata_path"

	start_lttng_tracing_ok $SESSION_NAME
	regenerate_metadata_ok $SESSION_NAME
	stop_lttng_tracing_ok $SESSION_NAME

	validate_trace $EVENT_NAME $TRACE_PATH
	destroy_lttng_session_ok $SESSION_NAME

	rm -rf "$TRACE_PATH"
}

plan_tests $NUM_TESTS

print_test_banner "$TEST_DESC"

if [ "$(id -u)" == "0" ]; then
	isroot=1
else
	isroot=0
fi

skip $isroot "Root access is needed. Skipping all kernel streaming tests." $NUM_TESTS ||
{
	validate_lttng_modules_present

	start_lttng_relayd "-o $TRACE_PATH"
	start_lttng_sessiond
	modprobe lttng-test

	tests=( test_kernel_streaming test_kernel_local )

	for fct_test in ${tests[@]};
	do
		SESSION_NAME=$(randstring 16 0)
		${fct_test}
	done

	rmmod lttng-test
	stop_lttng_sessiond
	stop_lttng_relayd
}
